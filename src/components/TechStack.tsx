/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    EyeLeft: THREE.SkinnedMesh;
    EyeRight: THREE.SkinnedMesh;
    Wolf3D_Body: THREE.SkinnedMesh;
    Wolf3D_Hair: THREE.SkinnedMesh;
    Wolf3D_Head: THREE.SkinnedMesh;
    Wolf3D_Outfit_Bottom: THREE.SkinnedMesh;
    Wolf3D_Outfit_Footwear: THREE.SkinnedMesh;
    Wolf3D_Outfit_Top: THREE.SkinnedMesh;
    Wolf3D_Teeth: THREE.SkinnedMesh;
    HTMLBox: THREE.Mesh;
    Text: THREE.Mesh;
    CSSBox: THREE.Mesh;
    Text001: THREE.Mesh;
    JSBox: THREE.Mesh;
    js: THREE.Mesh;
    Curve012: THREE.Mesh;
    Curve012_1: THREE.Mesh;
    Curve012_2: THREE.Mesh;
    Curve012_3: THREE.Mesh;
    Curve020: THREE.Mesh;
    Curve020_1: THREE.Mesh;
    Hips: THREE.Bone;
    Ctrl_Master: THREE.Bone;
    Ctrl_ArmPole_IK_Left: THREE.Bone;
    Ctrl_Hand_IK_Left: THREE.Bone;
    Ctrl_ArmPole_IK_Right: THREE.Bone;
    Ctrl_Hand_IK_Right: THREE.Bone;
    Ctrl_Foot_IK_Left: THREE.Bone;
    Ctrl_LegPole_IK_Left: THREE.Bone;
    Ctrl_Foot_IK_Right: THREE.Bone;
    Ctrl_LegPole_IK_Right: THREE.Bone;
  };
  materials: {
    Wolf3D_Eye: THREE.MeshStandardMaterial;
    Wolf3D_Body: THREE.MeshStandardMaterial;
    Wolf3D_Hair: THREE.MeshStandardMaterial;
    Wolf3D_Skin: THREE.MeshStandardMaterial;
    Wolf3D_Outfit_Bottom: THREE.MeshStandardMaterial;
    Wolf3D_Outfit_Footwear: THREE.MeshStandardMaterial;
    Wolf3D_Outfit_Top: THREE.MeshStandardMaterial;
    Wolf3D_Teeth: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["SVGMat.007"]: THREE.MeshStandardMaterial;
    ["SVGMat.010"]: THREE.MeshStandardMaterial;
    ["SVGMat.013"]: THREE.MeshStandardMaterial;
    ["SVGMat.011"]: THREE.MeshStandardMaterial;
    ["SVGMat.012"]: THREE.MeshStandardMaterial;
    ["SVGMat.014"]: THREE.MeshStandardMaterial;
    ["SVGMat.015"]: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "ArmatureAction"
  | "EyeLeft"
  | "EyeRight"
  | "Wolf3D_Body"
  | "Wolf3D_Head"
  | "Wolf3D_Outfit_Bottom"
  | "Wolf3D_Outfit_Footwear"
  | "Wolf3D_Outfit_Top"
  | "Wolf3D_Teeth"
  | "HTMLBoxAction"
  | "TextAction"
  | "CSSBoxAction"
  | "Text.001Action"
  | "JSBoxAction"
  | "jsAction"
  | "AndroidAction"
  | "ReactJSAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "assets/techStack.gltf"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <skinnedMesh
            name="EyeLeft"
            geometry={nodes.EyeLeft.geometry}
            material={materials.Wolf3D_Eye}
            skeleton={nodes.EyeLeft.skeleton}
            morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
            morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
          />
          <skinnedMesh
            name="EyeRight"
            geometry={nodes.EyeRight.geometry}
            material={materials.Wolf3D_Eye}
            skeleton={nodes.EyeRight.skeleton}
            morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
            morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
          />
          <skinnedMesh
            name="Wolf3D_Body"
            geometry={nodes.Wolf3D_Body.geometry}
            material={materials.Wolf3D_Body}
            skeleton={nodes.Wolf3D_Body.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Body.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Body.morphTargetInfluences}
          />
          <skinnedMesh
            name="Wolf3D_Hair"
            geometry={nodes.Wolf3D_Hair.geometry}
            material={materials.Wolf3D_Hair}
            skeleton={nodes.Wolf3D_Hair.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Head"
            geometry={nodes.Wolf3D_Head.geometry}
            material={materials.Wolf3D_Skin}
            skeleton={nodes.Wolf3D_Head.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
          />
          <skinnedMesh
            name="Wolf3D_Outfit_Bottom"
            geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
            material={materials.Wolf3D_Outfit_Bottom}
            skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
            morphTargetDictionary={
              nodes.Wolf3D_Outfit_Bottom.morphTargetDictionary
            }
            morphTargetInfluences={
              nodes.Wolf3D_Outfit_Bottom.morphTargetInfluences
            }
          />
          <skinnedMesh
            name="Wolf3D_Outfit_Footwear"
            geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
            material={materials.Wolf3D_Outfit_Footwear}
            skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
            morphTargetDictionary={
              nodes.Wolf3D_Outfit_Footwear.morphTargetDictionary
            }
            morphTargetInfluences={
              nodes.Wolf3D_Outfit_Footwear.morphTargetInfluences
            }
          />
          <skinnedMesh
            name="Wolf3D_Outfit_Top"
            geometry={nodes.Wolf3D_Outfit_Top.geometry}
            material={materials.Wolf3D_Outfit_Top}
            skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
            morphTargetDictionary={
              nodes.Wolf3D_Outfit_Top.morphTargetDictionary
            }
            morphTargetInfluences={
              nodes.Wolf3D_Outfit_Top.morphTargetInfluences
            }
          />
          <skinnedMesh
            name="Wolf3D_Teeth"
            geometry={nodes.Wolf3D_Teeth.geometry}
            material={materials.Wolf3D_Teeth}
            skeleton={nodes.Wolf3D_Teeth.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
          />
          <primitive object={nodes.Hips} />
          <primitive object={nodes.Ctrl_Master} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Left} />
          <primitive object={nodes.Ctrl_Hand_IK_Left} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Right} />
          <primitive object={nodes.Ctrl_Hand_IK_Right} />
          <primitive object={nodes.Ctrl_Foot_IK_Left} />
          <primitive object={nodes.Ctrl_LegPole_IK_Left} />
          <primitive object={nodes.Ctrl_Foot_IK_Right} />
          <primitive object={nodes.Ctrl_LegPole_IK_Right} />
        </group>
        <group name="cs_grp">
          <group name="cs_arm_fk" position={[1.5, 8.5, 0]} scale={0.822} />
          <group name="cs_calf_fk" position={[0.5, 8.5, 0]} scale={0.822} />
          <group name="cs_circle" position={[0.5, 4.5, 0]} scale={0.206} />
          <group name="cs_circle001" position={[0.5, 4.5, 0]} scale={0.206} />
          <group name="cs_circle_025" position={[2.5, 4.5, 0]} scale={0.206} />
          <group
            name="cs_foot"
            position={[0.5, 10.5, 0]}
            rotation={[-Math.PI, 0, 0]}
            scale={0.308}
          />
          <group
            name="cs_foot001"
            position={[0.5, 10.5, 0]}
            rotation={[-Math.PI, 0, 0]}
            scale={0.308}
          />
          <group
            name="cs_foot002"
            position={[0.5, 10.5, 0]}
            rotation={[-Math.PI, 0, 0]}
            scale={0.308}
          />
          <group
            name="cs_foot_01"
            position={[0.5, 18.5, 0]}
            rotation={[0, Math.PI / 2, 0]}
            scale={2.186}
          />
          <group name="cs_foot_roll" position={[0.5, 12.5, 0]} scale={0.592} />
          <group name="cs_forearm_fk" position={[2.5, 8.5, 0]} scale={0.822} />
          <group
            name="cs_hand"
            position={[0.5, 19.5, 0]}
            rotation={[-Math.PI, 0, 0]}
            scale={0.308}
          />
          <group name="cs_head" position={[0.5, 13.5, 0]} scale={0.206} />
          <group name="cs_hips" position={[0.5, 11.5, 0]} scale={0.206} />
          <group name="cs_master" position={[0.5, 17.5, 0]} scale={0.1} />
          <group name="cs_neck" position={[0.5, 14.5, 0]} scale={0.206} />
          <group
            name="cs_shoulder_left"
            position={[0.5, 15.5, 0]}
            rotation={[-Math.PI, -Math.PI / 2, 0]}
            scale={1.038}
          />
          <group
            name="cs_shoulder_right"
            position={[0.5, 16.5, 0]}
            rotation={[-Math.PI, -Math.PI / 2, 0]}
            scale={1.038}
          />
          <group name="cs_sphere" position={[0.5, 2.5, 0]} scale={0.206} />
          <group name="cs_sphere_012" position={[3.5, 2.5, 0]} scale={0.206} />
          <group
            name="cs_square"
            position={[1.5, 1.497, 0]}
            rotation={[-Math.PI, 0, 0]}
            scale={0.154}
          />
          <group
            name="cs_square_2"
            position={[0.5, 1.497, 0]}
            rotation={[-Math.PI, 0, 0]}
            scale={0.154}
          />
          <group name="cs_thigh_fk" position={[0.5, 7.5, 0]} scale={0.822} />
          <group name="cs_toe" position={[0.5, 9.5, 0]} scale={0.429} />
        </group>
        <mesh
          name="HTMLBox"
          castShadow
          receiveShadow
          geometry={nodes.HTMLBox.geometry}
          material={materials.Material}
          position={[0.173, 1.454, 0.461]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.053}
        />
        <mesh
          name="Text"
          castShadow
          receiveShadow
          geometry={nodes.Text.geometry}
          material={nodes.Text.material}
          position={[0.128, 1.444, 0.467]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.053}
        />
        <mesh
          name="CSSBox"
          castShadow
          receiveShadow
          geometry={nodes.CSSBox.geometry}
          material={materials["Material.001"]}
          position={[0.305, 1.389, 0.462]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.053}
        />
        <mesh
          name="Text001"
          castShadow
          receiveShadow
          geometry={nodes.Text001.geometry}
          material={nodes.Text001.material}
          position={[0.277, 1.379, 0.468]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.053}
        />
        <mesh
          name="JSBox"
          castShadow
          receiveShadow
          geometry={nodes.JSBox.geometry}
          material={materials["Material.002"]}
          position={[-0.203, 1.454, 0.458]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.052}
        />
        <mesh
          name="js"
          castShadow
          receiveShadow
          geometry={nodes.js.geometry}
          material={materials["SVGMat.007"]}
          position={[-0.223, 1.408, 0.464]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.094}
        />
        <group
          name="Android"
          position={[-0.37, 1.358, 0.458]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.614}
        >
          <mesh
            name="Curve012"
            castShadow
            receiveShadow
            geometry={nodes.Curve012.geometry}
            material={materials["SVGMat.010"]}
          />
          <mesh
            name="Curve012_1"
            castShadow
            receiveShadow
            geometry={nodes.Curve012_1.geometry}
            material={materials["SVGMat.013"]}
          />
          <mesh
            name="Curve012_2"
            castShadow
            receiveShadow
            geometry={nodes.Curve012_2.geometry}
            material={materials["SVGMat.011"]}
          />
          <mesh
            name="Curve012_3"
            castShadow
            receiveShadow
            geometry={nodes.Curve012_3.geometry}
            material={materials["SVGMat.012"]}
          />
        </group>
        <group
          name="ReactJS"
          position={[-0.075, 1.428, 0.452]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.202}
        >
          <mesh
            name="Curve020"
            castShadow
            receiveShadow
            geometry={nodes.Curve020.geometry}
            material={materials["SVGMat.014"]}
          />
          <mesh
            name="Curve020_1"
            castShadow
            receiveShadow
            geometry={nodes.Curve020_1.geometry}
            material={materials["SVGMat.015"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("assets/techStack.gltf");
